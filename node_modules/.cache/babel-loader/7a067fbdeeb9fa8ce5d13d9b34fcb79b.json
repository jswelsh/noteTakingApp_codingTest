{"ast":null,"code":"import _toConsumableArray from\"/home/ody7/repos/interviewTestApps/note_taking_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/ody7/repos/interviewTestApps/note_taking_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Divider,Grid,Paper,Typography}from'@mui/material';import React,{useState}from'react';import dayjs from'dayjs';import{AddNote}from'./AddNote';import{EditCard}from'./EditCard';import{Note}from'./Note';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Notes=function Notes(){var _useState=useState(function(){// getting stored notes\nvar saved=localStorage.getItem(\"notes\");var initialValue=JSON.parse(saved);return initialValue||[];}),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),noteBeingEditedIndex=_useState4[0],setNoteBeingEditedIndex=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEditMode=_useState6[0],setIsEditMode=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAddNoteMode=_useState8[0],setIsAddNoteMode=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),currentNoteContent=_useState10[0],setCurrentNoteContent=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),currentNoteTitle=_useState12[0],setCurrentNoteTitle=_useState12[1];var handleUpdatingNotes=function handleUpdatingNotes(newNotes){localStorage.setItem(\"notes\",JSON.stringify(newNotes));setNotes(newNotes);};var handleEdit=function handleEdit(currentNotes){handleUpdatingNotes(currentNotes);setIsEditMode(false);setIsAddNoteMode(false);};var handleDelete=function handleDelete(index){var newCurrentNotes=_toConsumableArray(notes);newCurrentNotes.splice(index,1);handleUpdatingNotes(newCurrentNotes);};var buttonOnClickHandler=function buttonOnClickHandler(_ref){var id=_ref.target.id;if(id==='addNote'){setIsAddNoteMode(true);}else if(id==='submitNote'){var currentNotes=_toConsumableArray(notes);currentNotes.unshift({id:dayjs(),title:currentNoteTitle,created:dayjs(),lastEdited:dayjs(),content:currentNoteContent});handleUpdatingNotes(currentNotes);setIsAddNoteMode(false);setCurrentNoteContent(null);setCurrentNoteTitle(null);}};return/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{my:{xs:3,md:6},p:{xs:2,md:3}},children:[/*#__PURE__*/_jsx(Typography,{children:\"Notes\",component:\"h1\",variant:\"h4\",align:\"center\"}),/*#__PURE__*/_jsx(Divider,{}),isEditMode?/*#__PURE__*/_jsx(EditCard,{notes:notes,handleEdit:handleEdit,noteBeingEditedIndex:noteBeingEditedIndex,note:notes[noteBeingEditedIndex]}):/*#__PURE__*/_jsxs(Grid,{container:true,rowSpacing:1,columnSpacing:{md:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,mb:3,mt:2,children:isAddNoteMode?/*#__PURE__*/_jsx(AddNote,{currentNoteTitle:currentNoteTitle,currentNoteContent:currentNoteContent,buttonOnClickHandler:buttonOnClickHandler,setCurrentNoteContent:setCurrentNoteContent,setCurrentNoteTitle:setCurrentNoteTitle}):/*#__PURE__*/_jsx(Button,{children:\"Add New Note\",id:\"addNote\",variant:\"contained\",fullWidth:true,onClick:buttonOnClickHandler})}),notes.map(function(note,index){return/*#__PURE__*/_jsx(Note,{note:note,setNoteBeingEditedIndex:setNoteBeingEditedIndex,setIsEditMode:setIsEditMode,handleDelete:handleDelete,index:index});})]})]});};","map":{"version":3,"sources":["/home/ody7/repos/interviewTestApps/note_taking_app/src/components/Notes.js"],"names":["Button","Divider","Grid","Paper","Typography","React","useState","dayjs","AddNote","EditCard","Note","Notes","saved","localStorage","getItem","initialValue","JSON","parse","notes","setNotes","noteBeingEditedIndex","setNoteBeingEditedIndex","isEditMode","setIsEditMode","isAddNoteMode","setIsAddNoteMode","currentNoteContent","setCurrentNoteContent","currentNoteTitle","setCurrentNoteTitle","handleUpdatingNotes","newNotes","setItem","stringify","handleEdit","currentNotes","handleDelete","index","newCurrentNotes","splice","buttonOnClickHandler","id","target","unshift","title","created","lastEdited","content","my","xs","md","p","map","note"],"mappings":"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","sourcesContent":["import {\n  Button, Divider,\n  Grid, Paper,\n  Typography\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport { AddNote } from './AddNote';\nimport { EditCard } from './EditCard';\nimport { Note } from './Note';\n\nexport const Notes = () => {\n\n  const [notes, setNotes] = useState(() => {\n    // getting stored notes\n    const saved = localStorage.getItem(\"notes\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || [];\n  });\n  const [noteBeingEditedIndex, setNoteBeingEditedIndex] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [isAddNoteMode, setIsAddNoteMode] = useState(false);\n  const [currentNoteContent, setCurrentNoteContent] = useState('')\n  const [currentNoteTitle, setCurrentNoteTitle] = useState('')\n\n  const handleUpdatingNotes = (newNotes) => {\n    localStorage.setItem(\"notes\", JSON.stringify(newNotes))\n    setNotes(newNotes)\n  }\n  const handleEdit = (currentNotes) => {\n    handleUpdatingNotes(currentNotes)\n    setIsEditMode(false)\n    setIsAddNoteMode(false)\n  }\n  const handleDelete = (index) => {\n    const newCurrentNotes = [...notes]\n    newCurrentNotes.splice(index,1)\n    handleUpdatingNotes(newCurrentNotes)\n  }\n  const buttonOnClickHandler = ({target:{id}}) => {\n    if (id === 'addNote') {\n      setIsAddNoteMode(true)\n    } else if (id === 'submitNote') {\n      const currentNotes = [...notes]\n      currentNotes.unshift({\n        id: dayjs(),\n        title: currentNoteTitle,\n        created: dayjs(),\n        lastEdited: dayjs(),\n        content: currentNoteContent\n      })\n      handleUpdatingNotes(currentNotes)\n      setIsAddNoteMode(false)\n      setCurrentNoteContent(null)\n      setCurrentNoteTitle(null)\n    }\n  }\n\n  return (\n    <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }} >\n      <Typography children=\"Notes\" component=\"h1\" variant=\"h4\" align=\"center\" />\n      <Divider />\n      {isEditMode\n        ? <EditCard\n            notes={notes}\n            handleEdit={handleEdit}\n            noteBeingEditedIndex={noteBeingEditedIndex}\n            note={notes[noteBeingEditedIndex]}\n          />\n        :\n        <Grid container rowSpacing={1} columnSpacing={{ md: 3 }} >\n          <Grid item xs={12} mb={3} mt={2}>\n            {isAddNoteMode\n            ? <AddNote\n                currentNoteTitle={currentNoteTitle}\n                currentNoteContent={currentNoteContent}\n                buttonOnClickHandler={buttonOnClickHandler}\n                setCurrentNoteContent={setCurrentNoteContent}\n                setCurrentNoteTitle={setCurrentNoteTitle}\n              />\n            : <Button\n                children='Add New Note'\n                id=\"addNote\"\n                variant=\"contained\"\n                fullWidth\n                onClick={buttonOnClickHandler}\n              />\n            }\n          </Grid>\n            {notes.map((note, index) =>\n            <Note\n              note={note}\n              setNoteBeingEditedIndex={setNoteBeingEditedIndex}\n              setIsEditMode={setIsEditMode}\n              handleDelete={handleDelete}\n              index={index}\n            />)}\n        </Grid>}\n    </Paper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}