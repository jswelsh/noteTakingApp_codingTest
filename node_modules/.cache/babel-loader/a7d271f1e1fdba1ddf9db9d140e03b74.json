{"ast":null,"code":"var _jsxFileName = \"/home/ody7/repos/interviewTestApps/note_taking_app/src/components/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, CardContent, CardHeader, Grid, TextareaAutosize, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditCard = _ref => {\n  _s();\n\n  let {\n    notes,\n    handleEdit,\n    noteBeingEditedIndex,\n    note: {\n      id,\n      title,\n      created,\n      content\n    }\n  } = _ref;\n  const [currentNoteTitle, setCurrentNoteTitle] = useState(title);\n  const [currentNoteContent, setCurrentNoteContent] = useState(content);\n\n  const handleTextInput = _ref2 => {\n    let {\n      target: {\n        id,\n        value\n      }\n    } = _ref2;\n    if (id === \"contentInputEdit\") setCurrentNoteContent(value);\n    if (id === \"titleInputEdit\") setCurrentNoteTitle(value);\n  };\n\n  const buttonOnClickHandler = () => {\n    const currentNotes = [...notes];\n    currentNotes.splice(noteBeingEditedIndex, 1);\n    currentNotes.unshift({\n      id: id,\n      title: currentNoteTitle,\n      created: created,\n      lastEdited: dayjs(),\n      content: currentNoteContent\n    });\n    setCurrentNoteContent(\"\");\n    setCurrentNoteTitle(\"\");\n    handleEdit(currentNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    box: true,\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"titleInputEdit\",\n          label: \"Title\",\n          value: currentNoteTitle,\n          variant: \"standard\",\n          fullWidth: true,\n          onChange: handleTextInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this),\n        titleTypographyProps: {\n          align: 'center'\n        },\n        subheaderTypographyProps: {\n          align: 'center'\n        },\n        sx: {\n          backgroundColor: theme => theme.palette.mode === 'light' ? theme.palette.grey[200] : theme.palette.grey[700]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            alignItems: 'baseline',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            id: \"contentInputEdit\",\n            placeholder: \"Add Note Content\",\n            value: currentNoteContent,\n            minRows: 3,\n            style: {\n              width: \"100%\"\n            },\n            onChange: handleTextInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Submit\",\n            id: \"submitNoteEdit\",\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: buttonOnClickHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCard, \"DMQcDPAabldNb2CShCA1wt8A7T0=\");\n\n_c = EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["/home/ody7/repos/interviewTestApps/note_taking_app/src/components/EditCard.js"],"names":["Box","Button","Card","CardContent","CardHeader","Grid","TextareaAutosize","TextField","React","useState","dayjs","EditCard","notes","handleEdit","noteBeingEditedIndex","note","id","title","created","content","currentNoteTitle","setCurrentNoteTitle","currentNoteContent","setCurrentNoteContent","handleTextInput","target","value","buttonOnClickHandler","currentNotes","splice","unshift","lastEdited","align","backgroundColor","theme","palette","mode","grey","display","justifyContent","flexDirection","alignItems","mb","width"],"mappings":"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","sourcesContent":["import {\n  Box, Button, Card, CardContent, CardHeader, Grid, TextareaAutosize,\n  TextField\n} from '@mui/material'\nimport React, { useState } from 'react'\nimport dayjs from 'dayjs'\n\nexport const EditCard = ({\n  notes,\n  handleEdit,\n  noteBeingEditedIndex,\n  note:{\n    id,\n    title,\n    created,\n    content\n  }\n}) => {\n  const [currentNoteTitle, setCurrentNoteTitle] = useState(title)\n  const [currentNoteContent, setCurrentNoteContent] = useState(content)\n  \n  const handleTextInput = ({target:{id,value}}) => {\n    if (id === \"contentInputEdit\") setCurrentNoteContent(value)\n    if (id === \"titleInputEdit\") setCurrentNoteTitle(value)\n  }\n  const buttonOnClickHandler = () => {\n    const currentNotes = [...notes]\n    currentNotes.splice(noteBeingEditedIndex, 1)\n    currentNotes.unshift({\n      id: id,\n      title: currentNoteTitle,\n      created: created,\n      lastEdited: dayjs(),\n      content: currentNoteContent\n    })\n    \n    setCurrentNoteContent(\"\")\n    setCurrentNoteTitle(\"\")\n    handleEdit(currentNotes)\n  }\n\n  return (\n    <Grid\n      item\n      box\n      xs={12}\n    >    \n      <Card >\n        <CardHeader\n          title={<TextField\n            id=\"titleInputEdit\"\n            label=\"Title\"\n            value={currentNoteTitle}\n            variant=\"standard\"\n            fullWidth\n            onChange={handleTextInput}\n          />}\n          titleTypographyProps={{ align: 'center' }}\n          subheaderTypographyProps={{\n            align: 'center',\n          }}\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[200]\n                : theme.palette.grey[700],\n          }}\n        />\n        <CardContent>\n          <Box sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection:'column',\n            alignItems: 'baseline',\n            mb: 2,\n          }}\n          >\n            <TextareaAutosize\n              id=\"contentInputEdit\"\n              placeholder=\"Add Note Content\"\n              value={currentNoteContent}\n              minRows={3}\n              style={{ width: \"100%\"}}\n              onChange={handleTextInput}\n            />\n            <Button\n              children='Submit'\n              id=\"submitNoteEdit\"\n              variant=\"contained\"\n              fullWidth\n              onClick={buttonOnClickHandler}\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}