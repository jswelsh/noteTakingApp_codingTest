{"ast":null,"code":"import _toConsumableArray from\"/home/ody7/repos/interviewTestApps/note_taking_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/ody7/repos/interviewTestApps/note_taking_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Button,Card,CardContent,CardHeader,Grid,TextareaAutosize,TextField}from'@mui/material';import React,{useState}from'react';import dayjs from'dayjs';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var EditCard=function EditCard(_ref){var notes=_ref.notes,handleEdit=_ref.handleEdit,noteBeingEditedIndex=_ref.noteBeingEditedIndex,_ref$note=_ref.note,id=_ref$note.id,title=_ref$note.title,created=_ref$note.created,content=_ref$note.content;var _useState=useState(title),_useState2=_slicedToArray(_useState,2),currentNoteTitle=_useState2[0],setCurrentNoteTitle=_useState2[1];var _useState3=useState(content),_useState4=_slicedToArray(_useState3,2),currentNoteContent=_useState4[0],setCurrentNoteContent=_useState4[1];var handleTextInput=function handleTextInput(_ref2){var _ref2$target=_ref2.target,id=_ref2$target.id,value=_ref2$target.value;if(id===\"contentInputEdit\")setCurrentNoteContent(value);if(id===\"titleInputEdit\")setCurrentNoteTitle(value);};var buttonOnClickHandler=function buttonOnClickHandler(){var currentNotes=_toConsumableArray(notes);currentNotes.splice(noteBeingEditedIndex,1);currentNotes.unshift({id:id,title:currentNoteTitle,created:created,lastEdited:dayjs(),content:currentNoteContent});setCurrentNoteContent(\"\");setCurrentNoteTitle(\"\");handleEdit(currentNotes);};return/*#__PURE__*/_jsx(Grid,{item:true,box:true,xs:12,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:/*#__PURE__*/_jsx(TextField,{id:\"titleInputEdit\",label:\"Title\",value:currentNoteTitle,variant:\"standard\",fullWidth:true,onChange:handleTextInput}),titleTypographyProps:{align:'center'},subheaderTypographyProps:{align:'center'},sx:{backgroundColor:function backgroundColor(theme){return theme.palette.mode==='light'?theme.palette.grey[200]:theme.palette.grey[700];}}}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'center',flexDirection:'column',alignItems:'baseline',mb:2},children:[/*#__PURE__*/_jsx(TextareaAutosize,{id:\"contentInputEdit\",placeholder:\"Add Note Content\",value:currentNoteContent,minRows:3,style:{width:\"100%\"},onChange:handleTextInput}),/*#__PURE__*/_jsx(Button,{children:\"Submit\",id:\"submitNoteEdit\",variant:\"contained\",fullWidth:true,onClick:buttonOnClickHandler})]})})]})});};","map":{"version":3,"sources":["/home/ody7/repos/interviewTestApps/note_taking_app/src/components/EditCard.js"],"names":["Box","Button","Card","CardContent","CardHeader","Grid","TextareaAutosize","TextField","React","useState","dayjs","EditCard","notes","handleEdit","noteBeingEditedIndex","note","id","title","created","content","currentNoteTitle","setCurrentNoteTitle","currentNoteContent","setCurrentNoteContent","handleTextInput","target","value","buttonOnClickHandler","currentNotes","splice","unshift","lastEdited","align","backgroundColor","theme","palette","mode","grey","display","justifyContent","flexDirection","alignItems","mb","width"],"mappings":"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","sourcesContent":["import {\n  Box, Button, Card, CardContent, CardHeader, Grid, TextareaAutosize,\n  TextField\n} from '@mui/material'\nimport React, { useState } from 'react'\nimport dayjs from 'dayjs'\nexport const EditCard = ({\n  notes,\n  handleEdit,\n  noteBeingEditedIndex,\n  note:{\n    id,\n    title,\n    created,\n    content\n  }\n}) => {\n  const [currentNoteTitle, setCurrentNoteTitle] = useState(title)\n  const [currentNoteContent, setCurrentNoteContent] = useState(content)\n  const handleTextInput = ({target:{id,value}}) => {\n    if (id === \"contentInputEdit\") setCurrentNoteContent(value)\n    if (id === \"titleInputEdit\") setCurrentNoteTitle(value)\n  }\n  const buttonOnClickHandler = () => {\n    const currentNotes = [...notes]\n    currentNotes.splice(noteBeingEditedIndex, 1)\n    currentNotes.unshift({\n      id: id,\n      title: currentNoteTitle,\n      created: created,\n      lastEdited: dayjs(),\n      content: currentNoteContent\n    })\n    \n    setCurrentNoteContent(\"\")\n    setCurrentNoteTitle(\"\")\n    handleEdit(currentNotes)\n  }\n  return (\n    <Grid\n      item\n      box\n      xs={12}\n    >    \n      <Card >\n        <CardHeader\n          title={<TextField\n            id=\"titleInputEdit\"\n            label=\"Title\"\n            value={currentNoteTitle}\n            variant=\"standard\"\n            fullWidth\n            onChange={handleTextInput}\n          />}\n          titleTypographyProps={{ align: 'center' }}\n          subheaderTypographyProps={{\n            align: 'center',\n          }}\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[200]\n                : theme.palette.grey[700],\n          }}\n        />\n        <CardContent>\n          <Box sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection:'column',\n            alignItems: 'baseline',\n            mb: 2,\n          }}\n          >\n            <TextareaAutosize\n              id=\"contentInputEdit\"\n              placeholder=\"Add Note Content\"\n              value={currentNoteContent}\n              minRows={3}\n              style={{ width: \"100%\"}}\n              onChange={handleTextInput}\n            />\n            <Button\n              children='Submit'\n              id=\"submitNoteEdit\"\n              variant=\"contained\"\n              fullWidth\n              onClick={buttonOnClickHandler}\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}